# Generated by Django 4.2.7 on 2025-09-01 03:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("courses", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AIConversation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=255, verbose_name="title"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "total_messages",
                    models.PositiveIntegerField(
                        default=0, verbose_name="total messages"
                    ),
                ),
                (
                    "last_message_at",
                    models.DateTimeField(auto_now=True, verbose_name="last message at"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ai_conversations",
                        to="courses.course",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ai_conversations",
                        to="courses.lesson",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "AI conversation",
                "verbose_name_plural": "AI conversations",
                "ordering": ["-last_message_at"],
            },
        ),
        migrations.CreateModel(
            name="AIQuiz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                ("questions", models.JSONField(default=list, verbose_name="questions")),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                            ("advanced", "Advanced"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="difficulty level",
                    ),
                ),
                (
                    "time_limit_minutes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="time limit (minutes)"
                    ),
                ),
                (
                    "passing_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=70.0,
                        max_digits=5,
                        verbose_name="passing score (%)",
                    ),
                ),
                (
                    "max_attempts",
                    models.PositiveIntegerField(default=3, verbose_name="max attempts"),
                ),
                (
                    "is_adaptive",
                    models.BooleanField(default=False, verbose_name="is adaptive"),
                ),
                (
                    "total_attempts",
                    models.PositiveIntegerField(
                        default=0, verbose_name="total attempts"
                    ),
                ),
                (
                    "average_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        verbose_name="average score",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_quizzes",
                        to="courses.course",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_quizzes",
                        to="courses.lesson",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI quiz",
                "verbose_name_plural": "AI quizzes",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIStudyPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "objectives",
                    models.JSONField(default=list, verbose_name="learning objectives"),
                ),
                (
                    "schedule",
                    models.JSONField(default=dict, verbose_name="study schedule"),
                ),
                (
                    "resources",
                    models.JSONField(
                        default=list, verbose_name="recommended resources"
                    ),
                ),
                (
                    "milestones",
                    models.JSONField(default=list, verbose_name="milestones"),
                ),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        verbose_name="progress percentage",
                    ),
                ),
                (
                    "completed_milestones",
                    models.JSONField(default=list, verbose_name="completed milestones"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "duration_weeks",
                    models.PositiveIntegerField(
                        default=4, verbose_name="duration (weeks)"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="study_plans",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="study_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "AI study plan",
                "verbose_name_plural": "AI study plans",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIPromptTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("lesson_explanation", "Lesson Explanation"),
                            ("quiz_generation", "Quiz Generation"),
                            ("assignment_help", "Assignment Help"),
                            ("concept_clarification", "Concept Clarification"),
                            ("study_guide", "Study Guide Creation"),
                            ("custom", "Custom Template"),
                        ],
                        max_length=30,
                        verbose_name="template type",
                    ),
                ),
                (
                    "grade_level",
                    models.CharField(
                        choices=[
                            ("K", "Kindergarten"),
                            ("1", "1st Grade"),
                            ("2", "2nd Grade"),
                            ("3", "3rd Grade"),
                            ("4", "4th Grade"),
                            ("5", "5th Grade"),
                            ("6", "6th Grade"),
                            ("7", "7th Grade"),
                            ("8", "8th Grade"),
                            ("9", "9th Grade"),
                            ("10", "10th Grade"),
                            ("11", "11th Grade"),
                            ("12", "12th Grade"),
                        ],
                        max_length=2,
                        verbose_name="grade level",
                    ),
                ),
                ("prompt_template", models.TextField(verbose_name="prompt template")),
                (
                    "variables",
                    models.JSONField(default=list, verbose_name="template variables"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(default=0, verbose_name="usage count"),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        verbose_name="average rating",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_templates",
                        to="courses.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI prompt template",
                "verbose_name_plural": "AI prompt templates",
                "ordering": ["template_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="AIMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("user", "User Message"),
                            ("assistant", "AI Assistant"),
                            ("system", "System Message"),
                        ],
                        max_length=20,
                        verbose_name="message type",
                    ),
                ),
                ("content", models.TextField(verbose_name="content")),
                (
                    "tokens_used",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="tokens used"
                    ),
                ),
                (
                    "model_used",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="AI model used"
                    ),
                ),
                (
                    "response_time",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="response time (seconds)",
                    ),
                ),
                (
                    "word_count",
                    models.PositiveIntegerField(default=0, verbose_name="word count"),
                ),
                (
                    "character_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="character count"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="ai_assistant.aiconversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI message",
                "verbose_name_plural": "AI messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIInteractionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_intent",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="user intent"
                    ),
                ),
                (
                    "ai_response_quality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("average", "Average"),
                            ("poor", "Poor"),
                            ("irrelevant", "Irrelevant"),
                        ],
                        max_length=20,
                        verbose_name="AI response quality",
                    ),
                ),
                (
                    "response_time",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="response time"
                    ),
                ),
                (
                    "tokens_used",
                    models.PositiveIntegerField(verbose_name="tokens used"),
                ),
                (
                    "cost_estimate",
                    models.DecimalField(
                        decimal_places=6,
                        default=0,
                        max_digits=8,
                        verbose_name="cost estimate",
                    ),
                ),
                (
                    "course_context",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="course context"
                    ),
                ),
                (
                    "lesson_context",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="lesson context"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="ai_assistant.aiconversation",
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="ai_assistant.aimessage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "AI interaction log",
                "verbose_name_plural": "AI interaction logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIQuizAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, verbose_name="attempt number"
                    ),
                ),
                ("answers", models.JSONField(default=dict, verbose_name="answers")),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="score (%)"
                    ),
                ),
                (
                    "is_passed",
                    models.BooleanField(default=False, verbose_name="is passed"),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="started at"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="completed at"
                    ),
                ),
                (
                    "time_taken_minutes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="time taken (minutes)"
                    ),
                ),
                (
                    "ai_feedback",
                    models.TextField(blank=True, verbose_name="AI feedback"),
                ),
                (
                    "improvement_suggestions",
                    models.JSONField(
                        default=list, verbose_name="improvement suggestions"
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="ai_assistant.aiquiz",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quiz_attempts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "AI quiz attempt",
                "verbose_name_plural": "AI quiz attempts",
                "ordering": ["-started_at"],
                "unique_together": {("quiz", "user", "attempt_number")},
            },
        ),
    ]
