# Generated by Django 4.2.7 on 2025-09-01 03:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="slug"),
                ),
                ("description", models.TextField(verbose_name="description")),
                (
                    "grade_level",
                    models.CharField(
                        choices=[
                            ("K", "Kindergarten"),
                            ("1", "1st Grade"),
                            ("2", "2nd Grade"),
                            ("3", "3rd Grade"),
                            ("4", "4th Grade"),
                            ("5", "5th Grade"),
                            ("6", "6th Grade"),
                            ("7", "7th Grade"),
                            ("8", "8th Grade"),
                            ("9", "9th Grade"),
                            ("10", "10th Grade"),
                            ("11", "11th Grade"),
                            ("12", "12th Grade"),
                        ],
                        max_length=2,
                        verbose_name="grade level",
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        upload_to="course_thumbnails/",
                        verbose_name="thumbnail",
                    ),
                ),
                (
                    "video_intro",
                    models.FileField(
                        blank=True,
                        upload_to="course_videos/",
                        verbose_name="intro video",
                    ),
                ),
                (
                    "learning_objectives",
                    models.JSONField(default=list, verbose_name="learning objectives"),
                ),
                (
                    "prerequisites",
                    models.JSONField(default=list, verbose_name="prerequisites"),
                ),
                ("tags", models.JSONField(default=list, verbose_name="tags")),
                (
                    "teks_standards",
                    models.JSONField(default=dict, verbose_name="TEKS standards"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="is featured"),
                ),
                (
                    "enrollment_limit",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="enrollment limit"
                    ),
                ),
                (
                    "duration_weeks",
                    models.PositiveIntegerField(
                        default=8, verbose_name="duration (weeks)"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=8,
                        verbose_name="price",
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="currency"
                    ),
                ),
                (
                    "total_enrollments",
                    models.PositiveIntegerField(
                        default=0, verbose_name="total enrollments"
                    ),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="average rating",
                    ),
                ),
                (
                    "total_ratings",
                    models.PositiveIntegerField(
                        default=0, verbose_name="total ratings"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="published at"
                    ),
                ),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses_taught",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "course",
                "verbose_name_plural": "courses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="name"),
                ),
                (
                    "code",
                    models.CharField(max_length=10, unique=True, verbose_name="code"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "color",
                    models.CharField(
                        default="#007bff", max_length=7, verbose_name="color"
                    ),
                ),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="icon"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="order")),
            ],
            options={
                "verbose_name": "subject",
                "verbose_name_plural": "subjects",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                ("slug", models.SlugField(max_length=255, verbose_name="slug")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                ("order", models.PositiveIntegerField(verbose_name="order")),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("text", "Text"),
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                            ("discussion", "Discussion"),
                        ],
                        default="text",
                        max_length=20,
                        verbose_name="content type",
                    ),
                ),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        upload_to="lesson_videos/",
                        verbose_name="video file",
                    ),
                ),
                ("video_url", models.URLField(blank=True, verbose_name="video URL")),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="duration (minutes)"
                    ),
                ),
                ("content", models.TextField(blank=True, verbose_name="content")),
                ("quiz_data", models.JSONField(default=dict, verbose_name="quiz data")),
                (
                    "is_preview",
                    models.BooleanField(default=False, verbose_name="is preview"),
                ),
                (
                    "is_required",
                    models.BooleanField(default=True, verbose_name="is required"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "verbose_name": "lesson",
                "verbose_name_plural": "lessons",
                "ordering": ["course", "order"],
                "unique_together": {("course", "order")},
            },
        ),
        migrations.CreateModel(
            name="CourseMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "material_type",
                    models.CharField(
                        choices=[
                            ("document", "Document"),
                            ("presentation", "Presentation"),
                            ("spreadsheet", "Spreadsheet"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("link", "External Link"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True, upload_to="course_materials/", verbose_name="file"
                    ),
                ),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "is_downloadable",
                    models.BooleanField(default=True, verbose_name="is downloadable"),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="order")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materials",
                        to="courses.course",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materials",
                        to="courses.lesson",
                    ),
                ),
            ],
            options={
                "verbose_name": "course material",
                "verbose_name_plural": "course materials",
                "ordering": ["course", "lesson", "order"],
            },
        ),
        migrations.AddField(
            model_name="course",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="courses.subject",
            ),
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("dropped", "Dropped"),
                            ("suspended", "Suspended"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "progress_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="progress percentage",
                    ),
                ),
                (
                    "final_grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="final grade",
                    ),
                ),
                (
                    "certificate_issued",
                    models.BooleanField(
                        default=False, verbose_name="certificate issued"
                    ),
                ),
                (
                    "certificate_url",
                    models.URLField(blank=True, verbose_name="certificate URL"),
                ),
                (
                    "enrolled_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="enrolled at"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="completed at"
                    ),
                ),
                (
                    "last_accessed",
                    models.DateTimeField(auto_now=True, verbose_name="last accessed"),
                ),
                (
                    "completed_lessons",
                    models.ManyToManyField(
                        blank=True, related_name="completed_by", to="courses.lesson"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "current_lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="current_for_enrollments",
                        to="courses.lesson",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "enrollment",
                "verbose_name_plural": "enrollments",
                "ordering": ["-enrolled_at"],
                "unique_together": {("student", "course")},
            },
        ),
        migrations.CreateModel(
            name="CourseReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="rating",
                    ),
                ),
                (
                    "review_text",
                    models.TextField(blank=True, verbose_name="review text"),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(default=False, verbose_name="is anonymous"),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=True, verbose_name="is approved"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.course",
                    ),
                ),
                (
                    "moderated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="moderated_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "course review",
                "verbose_name_plural": "course reviews",
                "ordering": ["-created_at"],
                "unique_together": {("student", "course")},
            },
        ),
    ]
